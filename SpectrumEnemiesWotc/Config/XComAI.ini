[XComGame.XGAIBehavior]
+AoEProfiles=( Profile=SmokeGrenadeProfile,  Ability=ThrowGrenade, bTargetAllies=True, bTargetEnemy=false, bUsePrecomputePath=1, MinTargets=2, bRequireLoS=1)

[XComGame.X2AIBTBehaviorTree]

; Call reinforcements logic
+EquivalentAbilities=( KeyName=AdventCommander_CallReinforcements, EquivalentAbilityName[0]=Spectrum_AdventCaptain_CallReinforcements)
+Behaviors=(BehaviorName=IsAbilityAvailable-AdventCommander_CallReinforcements, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AdventCommander_CallReinforcements, NodeType=Action)

+Behaviors=(BehaviorName=CallReinforcements_HasNoAllies, NodeType=StatCondition, \\
    Param[0]=VisibleAllyCount, \\
    Param[1]="<", Param[2]=1)
+Behaviors=(BehaviorName=TryCallReinforcements, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-AdventCommander_CallReinforcements, \\
	Child[1]=MultipleEnemiesVisible, \\
	Child[2]=CallReinforcements_HasNoAllies, \\
	Child[3]=SelectAbility-AdventCommander_CallReinforcements)

; Shoot when flanking logic
+Behaviors=(BehaviorName=TargetAffectedByEffect-Bind, NodeType=Condition)
+Behaviors=(BehaviorName=TargetAffectedByEffect-DLC_3SacrificeShield, NodeType=Condition)

+Behaviors=(BehaviorName=TargetNotSacrificeProtected_SE, NodeType=Inverter, \\
    Child[0]=TargetAffectedByEffect-DLC_3SacrificeShield)
+Behaviors=(BehaviorName=TargetNotBound_SE, NodeType=Inverter, \\
    Child[0]=TargetAffectedByEffect-Bind)
+Behaviors=(BehaviorName=TargetHitChanceNotLow_SE, NodeType=Inverter, \\
    Child[0]=TargetHitChanceLow) ; <-- CTH > 40
+Behaviors=(BehaviorName=ScoreFlankedEnemy_SE, NodeType=Sequence, \\
    Child[0]=IsFlankingTarget, \\
    Child[1]=TargetIsEnemy, \\
    Child[2]=TargetHitChanceNotLow_SE, \\
    Child[3]=TargetNotBound_SE, \\
    Child[4]=TargetNotSacrificeProtected_SE, \\
    Child[5]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=SSScoreFlankedEnemy_SE, NodeType=Successor, \\
    Child[0]=ScoreFlankedEnemy_SE)
+Behaviors=(BehaviorName=EvaluateFlankedEnemies_SE, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=SSScoreFlankedEnemy_SE, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=EvaluateFlankedEnemyTargets_SE, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateFlankedEnemies_SE)
+Behaviors=(BehaviorName=SelectFlankedEnemyTarget_SE, NodeType=Sequence, \\
    Child[0]=SetTargetStack-StandardShot, \\
    Child[1]=EvaluateFlankedEnemyTargets_SE, \\
    Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=ShootWhenFlanking_SE, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-StandardShot, \\
    Child[1]=SelectFlankedEnemyTarget_SE, \\
    Child[2]=SelectAbility-StandardShot)

; Sure shot logic
+Behaviors=(BehaviorName=ScoreSureShotEnemy_SE, NodeType=Sequence, \\
    Child[0]=TargetHitChanceHigh, \\
    Child[1]=TargetIsEnemy, \\
    Child[2]=TargetNotBound_SE, \\
    Child[3]=TargetNotSacrificeProtected_SE, \\
    Child[4]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=SSScoreSureShotEnemy_SE, NodeType=Successor, \\
    Child[0]=ScoreSureShotEnemy_SE)
+Behaviors=(BehaviorName=EvaluateSureShotEnemies_SE, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=SSScoreSureShotEnemy_SE, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=EvaluateSureShotEnemyTargets_SE, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateSureShotEnemies_SE)
+Behaviors=(BehaviorName=SelectSureShotEnemyTarget_SE, NodeType=Sequence, \\
    Child[0]=SetTargetStack-StandardShot, \\
    Child[1]=EvaluateSureShotEnemyTargets_SE, \\
    Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=ShootWhenSureShot_SE, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-StandardShot, \\
    Child[1]=SelectSureShotEnemyTarget_SE, \\
    Child[2]=SelectAbility-StandardShot)

; Mark target logic
+Behaviors=(BehaviorName=TryMarkTargetOption_SE, NodeType=Selector, \\
    Child[0]=ShootWhenFlanking_SE, \\
    Child[1]=ShootWhenSureShot_SE, \\
    Child[2]=TryMarkTargetOption)

; Smoke grenade logic
+Behaviors=(BehaviorName=FindPotentialAoETargets-SmokeGrenadeProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-SmokeGrenadeProfile, NodeType=Action)

+Behaviors=(BehaviorName=TrySmokeGrenadeOnGroup, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-ThrowGrenade, \\
    Child[1]=FindPotentialAoETargets-SmokeGrenadeProfile, \\
    Child[2]=SelectAoETarget-SmokeGrenadeProfile, \\
    Child[3]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=ScoreIfSuppressed, NodeType=Sequence, \\
    Child[0]=TargetAffectedByEffect-Suppression, \\
    Child[1]=AddToTargetScore_20)
+Behaviors=(BehaviorName=TargetIsUnableToMove_SE, NodeType=TargetStatCondition, \\
    Param[0]=ActionPoints, \\
    Param[1]="==", \\
    Param[2]="0")
+Behaviors=(BehaviorName=ScoreIfKillable, NodeType=Sequence, \\
    Child[0]=TargetIsUnableToMove_SE, \\
    Child[1]=TargetIsVulnerable, \\
    Child[2]=AddToTargetScore_10)
+Behaviors=(BehaviorName=TargetScorePossibleDanger, NodeType=Selector, \\
    Child[0]=ScoreIfSuppressed, \\
    Child[1]=ScoreIfKillable, \\
    Child[2]=AddToTargetScore_0)
+Behaviors=(BehaviorName=EvaluateTargetsSmokeGrenade, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=TargetScorePossibleDanger, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SelectBestTargetForSmokeGrenade, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateTargetsSmokeGrenade)
+Behaviors=(BehaviorName=SelectTargetForSmokeGrenade, NodeType=Sequence, \\
    Child[0]=SetPotentialAllyTargetStack, \\
    Child[1]=SelectBestTargetForSmokeGrenade, \\
    Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=TrySmokeGrenadeOnTarget, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-ThrowGrenade, \\
    Child[1]=SelectTargetForSmokeGrenade, \\
    Child[2]=FindPotentialAoETargets-GrenadePanickedProfile, \\
    Child[3]=SelectAoETarget-GrenadePanickedProfile, \\
    Child[4]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=TrySmokeGrenade_SE, NodeType=Selector, \\
    Child[0]=TrySmokeGrenadeOnGroup, \\
    Child[1]=TrySmokeGrenadeOnTarget)









; Shoot, reload, overwatch, or cower logic

+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatchOrCower_SE, NodeType=Selector, \\
    Child[0]=HunkerWhenDisoriented_SE, \\
    Child[1]=TryShootOrReloadOrOverwatch_SE)
+Behaviors=(BehaviorName=HunkerWhenDisoriented_SE, NodeType=Sequence, \\
    Child[0]=AffectedByEffect-Disoriented, \\
    Child[1]=MaybeHunker75_SE)
+Behaviors=(BehaviorName=AffectedByEffect-Disoriented, NodeType=Condition)
+Behaviors=(BehaviorName=MaybeHunker75_SE, NodeType=RandFilter, \\
    Child[0]=TryCower_SE, Param[0]=75)
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_SE, NodeType=Selector, \\
    Child[0]=ShootWhenFlanking_SE, \\
    Child[1]=OverwatchOverride_SE, \\
    Child[2]=ShootWhenKillShot_SE, \\
    Child[3]=ShootWhenSuppressor_SE, \\
    Child[4]=ShootWhenOverwatcher_SE, \\
    Child[5]=ShootWhenSureShot_SE, \\
    Child[6]=CheckForInitiateSuppression_SE, \\
    Child[7]=ConsiderTakingOverwatch, \\
    Child[8]=ShootIfAvailable, \\
    Child[9]=NeedsReload)




+Behaviors=(BehaviorName=OverwatchOverride_SE, NodeType=Sequence, \\
    Child[0]=NotActiveTeamXCom, \\
    Child[1]=OverwatchOverrideStart_SE)
+Behaviors=(BehaviorName=OverwatchOverrideStart_SE, NodeType=Selector, \\
    Child[0]=OverwatchOverride10_SE, \\
    Child[1]=OverwatchOverride25_SE, \\
    Child[2]=OverwatchOverride50_SE, \\
    Child[3]=OverwatchOverride75_SE, \\
    Child[4]=OverwatchOverrideNVE_SE)
+Behaviors=(BehaviorName=OverwatchOverride10_SE, NodeType=Sequence, \\
    Child[0]=AnyLivingEnemyVisible, \\
    Child[1]=AllHitChancesBelow10_SE, \\
    Child[2]=RandOverwatchAtCTH10_SE)
+Behaviors=(BehaviorName=OverwatchOverride25_SE, NodeType=Sequence, \\
    Child[0]=AnyLivingEnemyVisible, \\
    Child[1]=AllHitChancesBelow25_SE, \\
    Child[2]=NOTAllHitChancesBelow10_SE, \\
    Child[3]=RandOverwatchAtCTH25_SE)
+Behaviors=(BehaviorName=OverwatchOverride50_SE, NodeType=Sequence, \\
    Child[0]=AnyLivingEnemyVisible, \\
    Child[1]=AllHitChancesBelow50_SE, \\
    Child[2]=NOTAllHitChancesBelow25_SE, \\
    Child[3]=RandOverwatchAtCTH50_SE)
+Behaviors=(BehaviorName=OverwatchOverride75_SE, NodeType=Sequence, \\
    Child[0]=AnyLivingEnemyVisible, \\
    Child[1]=AllHitChancesBelow75_SE, \\
    Child[2]=NOTAllHitChancesBelow50_SE, \\
    Child[3]=RandOverwatchAtCTH75_SE)
+Behaviors=(BehaviorName=OverwatchOverrideNVE_SE, NodeType=Sequence, \\
    Child[0]=NoVisibleEnemies, \\
    Child[1]=NotAmbushMission_SE, \\
    Child[2]=RandOverwatch75)
+Behaviors=(BehaviorName=RandOverwatchAtCTH10_SE, NodeType=Selector, \\
    Child[0]=RandFirstOverwatchAtCTH10_SE, \\
    Child[1]=RandSecondOverwatchAtCTH10_SE, \\
    Child[2]=RandThirdOverwatchAtCTH10_SE)
+Behaviors=(BehaviorName=RandFirstOverwatchAtCTH10_SE, NodeType=Sequence, \\
    Child[0]=NoOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH10First_SE)
+Behaviors=(BehaviorName=RandSecondOverwatchAtCTH10_SE, NodeType=Sequence, \\
    Child[0]=OneOverwatchingTeammate, \\
    Child[1]=RandOverwatchAtCTH10Second_SE)
+Behaviors=(BehaviorName=RandThirdOverwatchAtCTH10_SE, NodeType=Sequence, \\
    Child[0]=MultipleOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH10Third_SE)
; CTH <25
+Behaviors=(BehaviorName=RandOverwatchAtCTH25_SE, NodeType=Selector, \\
    Child[0]=RandFirstOverwatchAtCTH25_SE, \\
    Child[1]=RandSecondOverwatchAtCTH25_SE, \\
    Child[2]=RandThirdOverwatchAtCTH25_SE)
+Behaviors=(BehaviorName=RandFirstOverwatchAtCTH25_SE, NodeType=Sequence, \\
    Child[0]=NoOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH25First_SE)
+Behaviors=(BehaviorName=RandSecondOverwatchAtCTH25_SE, NodeType=Sequence, \\
    Child[0]=OneOverwatchingTeammate, \\
    Child[1]=RandOverwatchAtCTH25Second_SE)
+Behaviors=(BehaviorName=RandThirdOverwatchAtCTH25_SE, NodeType=Sequence, \\
    Child[0]=MultipleOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH25Third_SE)
; CTH <50
+Behaviors=(BehaviorName=RandOverwatchAtCTH50_SE, NodeType=Selector, \\
    Child[0]=RandFirstOverwatchAtCTH50_SE, \\
    Child[1]=RandSecondOverwatchAtCTH50_SE, \\
    Child[2]=RandThirdOverwatchAtCTH50_SE)
+Behaviors=(BehaviorName=RandFirstOverwatchAtCTH50_SE, NodeType=Sequence, \\
    Child[0]=NoOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH50First_SE)
+Behaviors=(BehaviorName=RandSecondOverwatchAtCTH50_SE, NodeType=Sequence, \\
    Child[0]=OneOverwatchingTeammate, \\
    Child[1]=RandOverwatchAtCTH50Second_SE)
+Behaviors=(BehaviorName=RandThirdOverwatchAtCTH50_SE, NodeType=Sequence, \\
    Child[0]=MultipleOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH50Third_SE)
; CTH <75
+Behaviors=(BehaviorName=RandOverwatchAtCTH75_SE, NodeType=Selector, \\
    Child[0]=RandFirstOverwatchAtCTH75_SE, \\
    Child[1]=RandSecondOverwatchAtCTH75_SE, \\
    Child[2]=RandThirdOverwatchAtCTH75_SE)
+Behaviors=(BehaviorName=RandFirstOverwatchAtCTH75_SE, NodeType=Sequence, \\
    Child[0]=NoOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH75First_SE)
+Behaviors=(BehaviorName=RandSecondOverwatchAtCTH75_SE, NodeType=Sequence, \\
    Child[0]=OneOverwatchingTeammate, \\
    Child[1]=RandOverwatchAtCTH75Second_SE)
+Behaviors=(BehaviorName=RandThirdOverwatchAtCTH75_SE, NodeType=Sequence, \\
    Child[0]=MultipleOverwatchingTeammates, \\
    Child[1]=RandOverwatchAtCTH75Third_SE)

; The following lines are the percentages for Overwatch that are used by the hitchance based Overwatch Override.
; First/Second/Third refers to the number of Overwatchers already around. 

; CTH<10
+Behaviors=(BehaviorName=RandOverwatchAtCTH10First_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch10MaybeHunker90_SE, Param[0]=90)
+Behaviors=(BehaviorName=RandOverwatchAtCTH10Second_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch10MaybeHunker90_SE, Param[0]=75)
+Behaviors=(BehaviorName=RandOverwatchAtCTH10Third_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch10MaybeHunker90_SE, Param[0]=50)
; CTH<25
+Behaviors=(BehaviorName=RandOverwatchAtCTH25First_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch30MaybeHunker70_SE, Param[0]=60)
+Behaviors=(BehaviorName=RandOverwatchAtCTH25Second_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch30MaybeHunker70_SE, Param[0]=50)
+Behaviors=(BehaviorName=RandOverwatchAtCTH25Third_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch30MaybeHunker70_SE, Param[0]=30)
; CTH<50
+Behaviors=(BehaviorName=RandOverwatchAtCTH50First_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch65MaybeHunker35_SE, Param[0]=15)
+Behaviors=(BehaviorName=RandOverwatchAtCTH50Second_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch65MaybeHunker35_SE, Param[0]=10)
+Behaviors=(BehaviorName=RandOverwatchAtCTH50Third_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch65MaybeHunker35_SE, Param[0]=3)
; CTH<75
+Behaviors=(BehaviorName=RandOverwatchAtCTH75First_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch90MaybeHunker10_SE, Param[0]=1)
+Behaviors=(BehaviorName=RandOverwatchAtCTH75Second_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch90MaybeHunker10_SE, Param[0]=1)
+Behaviors=(BehaviorName=RandOverwatchAtCTH75Third_SE, NodeType=RandFilter, \\
    Child[0]=TryOverwatch90MaybeHunker10_SE, Param[0]=1)

; if the Overwatch Override triggers based on the random chance above, there is a second chance based check that can make the unit go into Hunker instead of Overwatch.
; There are 4 different probabilties for the Overwatch/Hunker chance and which one is used depends on the CTH bracket we just came from.

+Behaviors=(BehaviorName=TryOverwatch10MaybeHunker90_SE, NodeType=RandSelector, \\
    Child[0]=TryOverwatch, Param[0]=10, \\
    Child[1]=TryCower_SE, Param[1]=90)
+Behaviors=(BehaviorName=TryOverwatch30MaybeHunker70_SE, NodeType=RandSelector, \\
    Child[0]=TryOverwatch, Param[0]=30, \\
    Child[1]=TryCower_SE, Param[1]=70)
+Behaviors=(BehaviorName=TryOverwatch65MaybeHunker35_SE, NodeType=RandSelector, \\
    Child[0]=TryOverwatch, Param[0]=65, \\
    Child[1]=TryCower_SE, Param[1]=35)
+Behaviors=(BehaviorName=TryOverwatch90MaybeHunker10_SE, NodeType=RandSelector, \\
    Child[0]=TryOverwatch, Param[0]=90, \\
    Child[1]=TryCower_SE, Param[1]=10)

+Behaviors=(BehaviorName=AllHitChancesBelow10_SE, NodeType=StatCondition, \\
    Param[0]=TopHitChance, \\
    Param[1]="<", \\
    Param[2]="10")
+Behaviors=(BehaviorName=AllHitChancesBelow25_SE, NodeType=StatCondition, \\
    Param[0]=TopHitChance, \\
    Param[1]="<", \\
    Param[2]="25")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow10_SE, NodeType=Inverter, \\
    Child[0]=AllHitChancesBelow10_SE)
+Behaviors=(BehaviorName=AllHitChancesBelow50_SE, NodeType=StatCondition, \\
    Param[0]=TopHitChance, \\
    Param[1]="<", \\
    Param[2]="50")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow25_SE, NodeType=Inverter, \\
    Child[0]=AllHitChancesBelow25_SE)
+Behaviors=(BehaviorName=AllHitChancesBelow75_SE, NodeType=StatCondition, \\
    Param[0]=TopHitChance, \\
    Param[1]="<", \\
    Param[2]="75")
+Behaviors=(BehaviorName=NOTAllHitChancesBelow50_SE, NodeType=Inverter, \\
    Child[0]=AllHitChancesBelow50_SE)

+Behaviors=(BehaviorName=NotAmbushMission_SE, NodeType=Inverter, \\
    Child[0]=IsMissionOfType-CovertEscape)
+Behaviors=(BehaviorName=IsMissionOfType-CovertEscape, NodeType=Condition)

+Behaviors=(BehaviorName=TryCower_SE, NodeType=Selector, \\
    Child[0]=DoCower)

+Behaviors=(BehaviorName=ShootWhenKillShot_SE, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-StandardShot, \\
    Child[1]=SelectKillShotEnemyTarget_SE, \\
    Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectKillShotEnemyTarget_SE, NodeType=Sequence, \\
    Child[0]=SetTargetStack-StandardShot, \\
    Child[1]=EvaluateKillShotEnemyTargets_SE, \\
    Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=EvaluateKillShotEnemyTargets_SE, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateKillShotEnemies_SE)
+Behaviors=(BehaviorName=EvaluateKillShotEnemies_SE, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=SSScoreKillShotEnemy_SE, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSScoreKillShotEnemy_SE, NodeType=Successor, \\
    Child[0]=ScoreKillShotEnemy_SE)
+Behaviors=(BehaviorName=ScoreKillShotEnemy_SE, NodeType=Sequence, \\
    Child[0]=TargetIsKillable, \\
    Child[1]=TargetIsEnemy, \\
    Child[2]=TargetHitChanceNotLow_SE, \\
    Child[3]=TargetNotBound_SE, \\
    Child[4]=TargetNotSacrificeProtected_SE, \\
    Child[5]=GenericTargetEvaluations)

+Behaviors=(BehaviorName=ShootWhenSuppressor_SE, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-StandardShot, \\
    Child[1]=SelectSuppressingEnemyTarget_SE, \\
    Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectSuppressingEnemyTarget_SE, NodeType=Sequence, \\
    Child[0]=SetTargetStack-StandardShot, \\
    Child[1]=EvaluateSuppressingEnemyTargets_SE, \\
    Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=EvaluateSuppressingEnemyTargets_SE, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateSuppressingEnemies_SE)
+Behaviors=(BehaviorName=EvaluateSuppressingEnemies_SE, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=SSScoreSuppressingEnemy_SE, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSScoreSuppressingEnemy_SE, NodeType=Successor, \\
    Child[0]=ScoreSuppressingEnemy_SE)
+Behaviors=(BehaviorName=ScoreSuppressingEnemy_SE, NodeType=Sequence, \\
    Child[0]=TargetIsApplyingEffect-Suppression, \\
    Child[1]=TargetIsEnemy, \\
    Child[2]=TargetHitChanceNotLow_SE, \\
    Child[3]=TargetNotBound_SE, \\
    Child[4]=GenericTargetEvaluations)

+Behaviors=(BehaviorName=ShootWhenOverwatcher_SE, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-StandardShot, \\
    Child[1]=SelectOverwatchingEnemyTarget_SE, \\
    Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectOverwatchingEnemyTarget_SE, NodeType=Sequence, \\
    Child[0]=SetTargetStack-StandardShot, \\
    Child[1]=EvaluateOverwatchingEnemyTargets_SE, \\
    Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=EvaluateOverwatchingEnemyTargets_SE, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateOverwatchingEnemies_SE)
+Behaviors=(BehaviorName=EvaluateOverwatchingEnemies_SE, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=SSScoreOverwatchingEnemy_SE, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSScoreOverwatchingEnemy_SE, NodeType=Successor, \\
    Child[0]=ScoreOverwatchingEnemy_SE)
+Behaviors=(BehaviorName=ScoreOverwatchingEnemy_SE, NodeType=Sequence, \\
    Child[0]=TargetAffectedByEffect-Overwatch, \\
    Child[1]=TargetIsEnemy, \\
    Child[2]=TargetHitChanceNotLow_SE, \\
    Child[3]=TargetNotBound_SE, \\
    Child[4]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=TargetAffectedByEffect-Overwatch, NodeType=Condition)



+Behaviors=(BehaviorName=CheckForInitiateSuppression_SE, NodeType=Selector, \\
    Child[0]=CounterSuppress_SE, \\
    Child[1]=SuppressWhenManyAllies_SE, \\
    Child[2]=SuppressWhenTwoAllies_SE, \\
    Child[3]=SuppressWhenOneAlly_SE, \\
    Child[4]=CheckForJoiningSuppression_SE)
+Behaviors=(BehaviorName=SuppressWhenManyAllies_SE, NodeType=Sequence, \\
    Child[0]=ManyAlliesVisible_SE, \\
    Child[1]=MaybeSuppress90_SE)
+Behaviors=(BehaviorName=SuppressWhenTwoAllies_SE, NodeType=Sequence, \\
    Child[0]=TwoAlliesVisible_SE, \\
    Child[1]=MaybeSuppress50_SE)
+Behaviors=(BehaviorName=SuppressWhenOneAlly_SE, NodeType=Sequence, \\
    Child[0]=OneAllyVisible_SE, \\
    Child[1]=MaybeSuppress10_SE)
+Behaviors=(BehaviorName=OneAllyVisible_SE, NodeType=StatCondition, \\
    Param[0]=VisibleAllyCount, \\
    Param[1]="=", \\
    Param[2]=1)
+Behaviors=(BehaviorName=TwoAlliesVisible_SE, NodeType=StatCondition, \\
    Param[0]=VisibleAllyCount, \\
    Param[1]="=", \\
    Param[2]=2)
+Behaviors=(BehaviorName=ManyAlliesVisible_SE, NodeType=StatCondition, \\
    Param[0]=VisibleAllyCount, \\
    Param[1]=">", \\
    Param[2]=2)
+Behaviors=(BehaviorName=MaybeSuppress10_SE, NodeType=RandFilter, \\
    Child[0]=FindSuppressionTarget_SE, Param[0]=10)
+Behaviors=(BehaviorName=MaybeSuppress50_SE, NodeType=RandFilter, \\
    Child[0]=FindSuppressionTarget_SE, Param[0]=50)
+Behaviors=(BehaviorName=MaybeSuppress90_SE, NodeType=RandFilter, \\
    Child[0]=FindSuppressionTarget_SE, Param[0]=90)
+Behaviors=(BehaviorName=CounterSuppress_SE, NodeType=Selector, \\
    Child[0]=SuppressSuppressors_SE, \\
    Child[1]=SuppressOverwatchers_SE)
+Behaviors=(BehaviorName=SuppressSuppressors_SE, NodeType=Sequence, \\
    Child[0]=HasVisibleSuppressors_SE, \\
    Child[1]=FindSuppressionTarget_SE)
+Behaviors=(BehaviorName=SuppressOverwatchers_SE, NodeType=Sequence, \\
    Child[0]=HasVisibleOverwatchers_SE, \\
    Child[1]=FindSuppressionTarget_SE)
+Behaviors=(BehaviorName=HasVisibleSuppressors_SE, NodeType=Inverter, \\
    Child[0]=NoVisibleSuppressors)
+Behaviors=(BehaviorName=HasVisibleOverwatchers_SE, NodeType=Inverter, \\
    Child[0]=NoVisibleOverwatchers)
+Behaviors=(BehaviorName=MaybeSuppressClosestOnBadShot_SE, NodeType=Sequence, \\
    Child[0]=AllHitChancesBelow25_SE, \\
    Child[1]=RollForSuppress_SE)
+Behaviors=(BehaviorName=RollForSuppress_SE, NodeType=RandFilter, \\
    Child[0]=TrySuppressClosest, Param[0]=50)
+Behaviors=(BehaviorName=CheckForJoiningSuppression_SE, NodeType=Selector, \\
    Child[0]=CounterSuppress_SE, \\
    Child[1]=MaybeSuppressClosestOnBadShot_SE)
+Behaviors=(BehaviorName=FindSuppressionTarget_SE, NodeType=Selector, \\
    Child[0]=CounterSuppressOverwatcher_SE, \\
    Child[1]=CounterSuppressSuppressor_SE, \\
    Child[2]=TrySuppressClosest)
+Behaviors=(BehaviorName=CounterSuppressOverwatcher_SE, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-Suppression, \\
    Child[1]=SelectOverwatchingEnemyTarget_Supp_SE, \\
    Child[2]=SelectAbility-Suppression)
+Behaviors=(BehaviorName=SelectOverwatchingEnemyTarget_Supp_SE, NodeType=Sequence, \\
    Child[0]=SetTargetStack-Suppression, \\
    Child[1]=EvaluateOverwatchingEnemyTargets_Supp_SE, \\
    Child[2]=HasValidTarget-Suppression)
+Behaviors=(BehaviorName=EvaluateOverwatchingEnemyTargets_Supp_SE, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateOverwatchingEnemies_Supp_SE)
+Behaviors=(BehaviorName=EvaluateOverwatchingEnemies_Supp_SE, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=SSScoreOverwatchingEnemy_Supp_SE, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSScoreOverwatchingEnemy_Supp_SE, NodeType=Successor, \\
    Child[0]=ScoreOverwatchingEnemy_Supp_SE)
+Behaviors=(BehaviorName=ScoreOverwatchingEnemy_Supp_SE, NodeType=Sequence, \\
    Child[0]=TargetAffectedByEffect-Overwatch, \\
    Child[1]=TargetIsEnemy, \\
    Child[2]=GenericTargetEvaluations)
+Behaviors=(BehaviorName=CounterSuppressSuppressor_SE, NodeType=Sequence, \\
    Child[0]=IsAbilityAvailable-Suppression, \\
    Child[1]=SelectSuppressingEnemyTarget_Supp_SE, \\
    Child[2]=SelectAbility-Suppression)
+Behaviors=(BehaviorName=SelectSuppressingEnemyTarget_Supp_SE, NodeType=Sequence, \\
    Child[0]=SetTargetStack-Suppression, \\
    Child[1]=EvaluateSuppressingEnemyTargets_Supp_SE, \\
    Child[2]=HasValidTarget-Suppression)
+Behaviors=(BehaviorName=EvaluateSuppressingEnemyTargets_Supp_SE, NodeType=RepeatUntilFail, \\
    Child[0]=EvaluateSuppressingEnemies_Supp_SE)
+Behaviors=(BehaviorName=EvaluateSuppressingEnemies_Supp_SE, NodeType=Sequence, \\
    Child[0]=SetNextTarget, \\
    Child[1]=SSScoreSuppressingEnemy_Supp_SE, \\
    Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSScoreSuppressingEnemy_Supp_SE, NodeType=Successor, \\
    Child[0]=ScoreSuppressingEnemy_Supp_SE)
+Behaviors=(BehaviorName=ScoreSuppressingEnemy_Supp_SE, NodeType=Sequence, \\
    Child[0]=TargetIsApplyingEffect-Suppression, \\
    Child[1]=TargetIsEnemy, \\
    Child[2]=GenericTargetEvaluations)